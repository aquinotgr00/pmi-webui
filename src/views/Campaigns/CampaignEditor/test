import React from 'react'
import { Col, Form, FormFeedback, FormGroup, Input, Row } from 'reactstrap'
import { Formik, Field } from 'formik'
import DatePicker from 'react-datepicker'
import moment from 'moment'
import CreateCampaignSchema from 'validators/campaignCreate'

export default function CampaignForm (props) {
  return (
    <Formik
      initialValues={props.initialValues}
      enableReinitialize={true}
      validationSchema={CreateCampaignSchema}
      onSubmit={(values, { setSubmitting }) => {
        setSubmitting(false)
      }}
    >
      {({
        errors,
        handleSubmit,
        isSubmitting
      }) => (
              <>
                <Form className='col-md-6 col-lg7 pl-0'>
                  <FormGroup>
                    <label htmlFor='title'>Judul</label>
                    <Field
                      name='title'
                      render={({ field }) => (
                        <Input {...field} id='title' invalid={errors.title !== undefined} />
                      )}
                    />
                    {errors.title !== undefined ? <FormFeedback>{errors.title}</FormFeedback> : ''}
                  </FormGroup>
                  <FormGroup>
                    <label htmlFor='description'>Deskripsi</label>
                    <Field
                      name='description'
                      render={({ field }) => (
                        <Input {...field} type='textarea' id='description' rows={10} invalid={errors.description !== undefined} />
                      )}
                    />
                    {errors.description !== undefined ? <FormFeedback>{errors.description}</FormFeedback> : ''}
                  </FormGroup>
                  <FormGroup>
                    <label htmlFor='amount_goal'>Target Dana Donasi</label>
                    <Field
                      name='amount_goal'
                      render={({ field }) => (
                        <Input {...field} type='number' id='amount_goal' invalid={errors.amount_goal !== undefined} />
                      )}
                    />
                    {errors.amount_goal !== undefined ? <FormFeedback>{errors.amount_goal}</FormFeedback> : ''}
                  </FormGroup>
                  <FormGroup className='form-group'>
                    <label htmlFor='duration'>Rentang Waktu Donasi</label>

                    <Row form>
                      <Col md={6}>
                        <DatePicker
                          selectsStart
                          startDate={moment()}
                          className='form-control'
                        />

                      </Col>
                      <Col md={6}>
                        <DatePicker
                          selectsEnd
                          startDate={moment()}
                          minDate={moment()}
                          className='form-control'
                        />
                      </Col>
                    </Row>

                  </FormGroup>

                  <div className='d-flex flex-row-reverse mt-4'>
                    <button type='submit' className='btn btn-success ml-4'>Publish</button>
                    <button type='submit' className='btn btn-outline-secondary'>Simpan ke Draft</button>
                  </div>
                </Form>
                <div className='col-md-4 col-lg-5 pl-5 grs'>
                  <div className='mb-4'>
                    <label htmlFor='exampleFormControlSelect1'>Gambar Utama</label>
                    <div className='mb-2'>
                      <a data-toggle='modal' data-target='#ModalMediaLibrary'>
                        <img className='img-fluid img-thumbnail add-img-featured' src={require('assets/images/image-plus.svg')} alt='' />
                      </a>
                    </div>
                    <small><span>Image size must be 1920x600 with maximum file size</span>
                      <span>400 kb</span></small>
                  </div>
                </div>
              </>
      )}

    </Formik>
  )
}
